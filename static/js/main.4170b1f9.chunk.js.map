{"version":3,"sources":["contexts/CurrentValuteContext.js","components/Converter/Converter.js","components/CurrenciesItem/CurrenciesItem.js","components/Currencies/Currencies.js","components/Header/Header.js","utils/api.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["CurrentValuteContext","React","createContext","Converter","valute","useContext","useState","result","setResult","resultValute","setResultValute","inputValue","setInputValue","className","onSubmit","evt","preventDefault","transformData","data","arr","split","value","forValute","separator","inValute","parseInt","toLowerCase","transformInputData","whiteList","includes","checkValidityInputValue","key","toUpperCase","slice","Value","calculateCurrenties","alert","action","type","placeholder","onChange","target","required","toFixed","CurrenciesItem","baseValute","charCode","baseLang","Currencies","valutes","setValutes","useEffect","userLang","usdRub","eurRub","rubUsd","eurUsd","map","item","CharCode","ID","Header","selectOnChange","exact","to","activeClassName","name","id","api","url","this","_url","res","ok","json","Promise","reject","status","fetch","then","_getResponseData","App","setValute","navigator","language","userLanguage","getInitialValute","Valute","EUR","USD","usdEur","rubEur","catch","err","console","log","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4170b1f9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const CurrentValuteContext = React.createContext();\r\n","import { useState, useContext } from \"react\";\r\nimport { CurrentValuteContext } from \"../../contexts/CurrentValuteContext\";\r\nimport \"./Converter.css\";\r\n\r\nfunction Converter() {\r\n  const valute = useContext(CurrentValuteContext);\r\n  const [result, setResult] = useState(0);\r\n  const [resultValute, setResultValute] = useState(\"\");\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  function handleInputOnChange(evt) {\r\n    setInputValue(evt.target.value);\r\n  }\r\n\r\n  function transformInputData(data) {\r\n    const arr = data.split(\" \");\r\n    let [value, forValute, separator, inValute] = arr;\r\n\r\n    value = parseInt(value);\r\n    forValute = forValute.toLowerCase();\r\n    separator = separator.toLowerCase();\r\n    inValute = inValute.toLowerCase();\r\n\r\n    return { value, forValute, separator, inValute };\r\n  }\r\n\r\n  function calculateCurrenties(value) {\r\n    const key = `${value.forValute.toLowerCase()}${\r\n      value.inValute[0].toUpperCase() + value.inValute.slice(1)\r\n    }`;\r\n\r\n    return value.value * valute[key].Value;\r\n  }\r\n\r\n  function checkValidityInputValue(value) {\r\n    const whiteList = [\"usd\", \"eur\", \"rub\"];\r\n    if (value.separator !== \"in\") {\r\n      return false;\r\n    } else if (!whiteList.includes(value.inValute)) {\r\n      return false;\r\n    } else if (!whiteList.includes(value.forValute)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function handleSubmitForm(evt) {\r\n    evt.preventDefault();\r\n    const transformData = transformInputData(inputValue);\r\n\r\n    if (checkValidityInputValue(transformData)) {\r\n      const result = calculateCurrenties(transformData);\r\n\r\n      setResultValute(transformData.inValute.toUpperCase());\r\n      setResult(result);\r\n    } else {\r\n      alert(\"Введены некорректные данные. Введите текст в виде 15 usd in rub\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <form onSubmit={handleSubmitForm} action=\"/\" className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form__input\"\r\n          placeholder=\"Введите текст в виде 15 usd in rub\"\r\n          value={inputValue}\r\n          onChange={handleInputOnChange}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"form__btn\">\r\n          Рассчитать\r\n        </button>\r\n      </form>\r\n      <p className=\"result\">\r\n        {result === 0 ? \"\" : result.toFixed(2) + \" \" + resultValute}\r\n      </p>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Converter;\r\n","import \"./CurrenciesItem.css\";\r\n\r\nfunction CurrenciesItem({ charCode, value, baseLang }) {\r\n  let baseValute;\r\n\r\n  if (baseLang === \"ru\") {\r\n    baseValute = \"RUB\";\r\n  } else if (baseLang === \"en\") {\r\n    baseValute = \"USD\";\r\n  }\r\n\r\n  return (\r\n    <li className=\"currencies__item\">\r\n      <h2 className=\"currencies__default\">1 {charCode}:</h2>\r\n      <p className=\"currencies__value\">\r\n        {value} {baseValute}\r\n      </p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CurrenciesItem;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Currencies.css\";\r\nimport { CurrentValuteContext } from \"../../contexts/CurrentValuteContext\";\r\nimport CurrenciesItem from \"../CurrenciesItem/CurrenciesItem\";\r\n\r\nfunction Currencies() {\r\n  const [valutes, setValutes] = useState([]);\r\n  const valute = useContext(CurrentValuteContext);\r\n\r\n  useEffect(() => {\r\n    if (valute.userLang === \"ru\") {\r\n      setValutes([valute.usdRub, valute.eurRub]);\r\n    } else if (valute.userLang === \"en\") {\r\n      setValutes([valute.rubUsd, valute.eurUsd]);\r\n    }\r\n  }, [valute]);\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"currencies\">\r\n        <ul className=\"currencies__list\">\r\n          {valutes.map((item) => (\r\n            <CurrenciesItem\r\n              charCode={item.CharCode}\r\n              value={item.Value.toFixed(2)}\r\n              baseLang={valute.userLang}\r\n              key={item.ID}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Currencies;\r\n","import { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { CurrentValuteContext } from \"../../contexts/CurrentValuteContext\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header({ selectOnChange }) {\r\n  const valute = useContext(CurrentValuteContext);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className=\"header__link\"\r\n        activeClassName=\"header__link_active\"\r\n      >\r\n        Конвертер\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/currencies\"\r\n        className=\"header__link\"\r\n        activeClassName=\"header__link_active\"\r\n      >\r\n        Курс валют\r\n      </NavLink>\r\n\r\n      <select\r\n        name=\"lang\"\r\n        id=\"lang\"\r\n        value={valute.userLang}\r\n        onChange={selectOnChange}\r\n        className=\"header__select\"\r\n      >\r\n        <option value=\"ru\">ru</option>\r\n        <option value=\"en\">en</option>\r\n      </select>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","class Api {\r\n  _url;\r\n  constructor(url) {\r\n    this._url = url;\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getInitialValute() {\r\n    return fetch(this._url).then(this._getResponseData);\r\n  }\r\n}\r\n\r\nconst api = new Api(\"https://www.cbr-xml-daily.ru/daily_json.js\");\r\n\r\nexport default api;\r\n","import { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { CurrentValuteContext } from \"../../contexts/CurrentValuteContext\";\nimport Converter from \"../Converter/Converter\";\nimport Currencies from \"../Currencies/Currencies\";\nimport Header from \"../Header/Header\";\nimport api from \"../../utils/api\";\nimport \"./App.css\";\n\nfunction App() {\n  const [valute, setValute] = useState({});\n\n  useEffect(() => {\n    const userLang = navigator.language || navigator.userLanguage;\n    api\n      .getInitialValute()\n      .then((res) => {\n        const eurRub = res.Valute.EUR;\n        const usdRub = res.Valute.USD;\n        const eurUsd = {\n          ID: \"EU22222\",\n          CharCode: \"EUR\",\n          Value: eurRub.Value / usdRub.Value,\n        };\n        const usdEur = {\n          ID: \"UE33333\",\n          CharCode: \"USD\",\n          Value: usdRub.Value / eurRub.Value,\n        };\n        const rubEur = {\n          ID: \"RE44444\",\n          CharCode: \"RUB\",\n          Value: 1 / eurRub.Value,\n        };\n        const rubUsd = {\n          ID: \"RU55555\",\n          CharCode: \"RUB\",\n          Value: 1 / usdRub.Value,\n        };\n\n        setValute({ eurRub, usdRub, eurUsd, usdEur, rubEur, rubUsd, userLang });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleSelectOnChange(evt) {\n    let data = { ...valute };\n    data.userLang = evt.target.value;\n    setValute(data);\n  }\n\n  return (\n    <CurrentValuteContext.Provider value={valute}>\n      <Header selectOnChange={handleSelectOnChange} />\n      <Switch>\n        <Route exact path=\"/\">\n          <Converter />\n        </Route>\n        <Route path=\"/currencies\">\n          <Currencies />\n        </Route>\n      </Switch>\n    </CurrentValuteContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}